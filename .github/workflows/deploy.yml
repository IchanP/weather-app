name: Deploy Weather App

on:
  workflow_dispatch:
  push:
    branches: ["main"]

env:
  CERT_PATH: /opt/weather-app/certs
  CLIENT_PATH: /opt/weather-app/redis/client-certs
  DOCKER_CONFIG_PATH: /opt/weather-app/docker

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.DO_SSH_KEY }}
          known_hosts: ${{ secrets.DO_KNOWN_HOSTS }}

      - name: Setup remote directories
        run: |
          ssh root@${{ secrets.DO_HOST }} "mkdir -p ${CERT_PATH} ${CLIENT_PATH} ${DOCKER_CONFIG_PATH}"

      - name: Copy certificates
        run: |
          echo "${{ secrets._REDIS_CLIENT_PFX }}" | base64 -d | ssh root@${{ secrets.DO_HOST }} "cat > ${CLIENT_PATH}/client.pfx"
          echo "${{ secrets._REDIS_SERVER_PEM }}" | base64 -d | ssh root@${{ secrets.DO_HOST }} "cat > ${CLIENT_PATH}/ca_server.pem"
          echo "${{ secrets._REDIS_TLS_CERT }}" | base64 -d | ssh root@${{ secrets.DO_HOST }} "cat > ${CERT_PATH}/redis_server.crt"
          echo "${{ secrets._REDIS_TLS_KEY }}" | base64 -d | ssh root@${{ secrets.DO_HOST }} "cat > ${CERT_PATH}/redis_server.key"
          echo "${{ secrets._REDIS_TLS_CA_CERT }}" | base64 -d | ssh root@${{ secrets.DO_HOST }} "cat > ${CERT_PATH}/ca.crt"
            
      - name: Set permissions
        run: |
          ssh root@${{ secrets.DO_HOST }} "chmod 600 ${CERT_PATH}/* ${CLIENT_PATH}/*"

      - name: Copy docker files
        run: |
          scp docker-compose.yml root@${{ secrets.DO_HOST }}:${DOCKER_CONFIG_PATH}/
          printenv | grep '^REDIS_\|^CW_' | ssh root@${{ secrets.DO_HOST }} "cat > ${DOCKER_CONFIG_PATH}/.env"
        env:
          REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
          REDIS_USERNAME: ${{ secrets.REDIS_USERNAME }}
          CW_REDIS_CONNECTION_STRING: ${{ secrets.CW_REDIS_CONNECTION_STRING }}
          # TODO add paths to the files

      - name: Deploy
        run: |
          ssh root@${{ secrets.DO_HOST }} "cd ${DOCKER_CONFIG_PATH} && docker compose pull && docker compose -f docker-compose.yaml -f docker-compose.production.yaml up -d"

